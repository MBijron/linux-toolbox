#!/bin/bash

function commitmessages() {
    # Check if the current directory is a Git repository
    if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
        echo "Error: Not a Git repository. Exiting."
        return 1
    fi

    # Get the current branch name
    current_branch=$(git symbolic-ref --short HEAD)

    # Find the commit where the branch was created by looking for the merge-base with the main branch
    # Replace 'main' with the default branch of your repository if it's different
    base_commit=$(git merge-base $current_branch master)

    # List commit messages from the current branch (excluding specified patterns), starting from the base commit
    git log --pretty=format:"- %s" --grep="^\(WIP\|Opt\|Optimization\):" --invert-grep --no-merges --first-parent $base_commit..$current_branch
}
