#!/bin/bash
# mr

git_mr() {
    # Function to sanitize the summary by escaping problematic characters and preserving newlines
    sanitize_summary() {
        # Replace newlines with a placeholder to prevent sed issues, and escape problematic characters
        echo "$1" | sed 's/[\/&*]/\\&/g' | sed ':a;N;$!ba;s/\n/ __NEWLINE__ /g' | sed 's/^[ \t]*//;s/[ \t]*$//'
    }

    # Function to restore newlines from the placeholder
    restore_newlines() {
        echo "$1" | sed 's/ __NEWLINE__ /\n/g'
    }

    # Check if in a git repository
    if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
        echo "Error: Not inside a git repository."
        return 1
    fi

    # Get the branch name
    branch_name=$(git rev-parse --abbrev-ref HEAD)
    
    # Extract the CUAC-<number> from the branch name
    cuac_code=$(echo "$branch_name" | grep -oE 'CUAC-[0-9]+')
    
    if [ -z "$cuac_code" ]; then
        echo "Error: CUAC code not found in branch name."
        return 1
    fi
    
    # Get the directory of the script
    COMMAND_DIR=$(ltdir)
    
    # Load the template file
    template_file="$COMMAND_DIR/git_mr_template.txt"
    if [ ! -f "$template_file" ]; then
        echo "Error: Template file 'git_mr_template.txt' not found."
        return 1
    fi
    template=$(cat "$template_file")
    
    # Get commit messages and sanitize them
    summary=$(xgit commits)
    sanitized_summary=$(sanitize_summary "$summary")
    
    # Replace <CUAC_CODE> and <SUMMARY>
    modified_template=$(echo "$template" | sed "s/<CUAC_CODE>/$cuac_code/g" | sed "s|<SUMMARY>|$sanitized_summary|g")
    
    # Get refactoring commit messages
    refactorings=$(xgit commits refactor)

    if [ -n "$refactorings" ]; then
        # Sanitize refactorings and replace <REFACTORINGS>
        sanitized_refactorings=$(sanitize_summary "$refactorings")
        modified_template=$(echo "$modified_template" | sed "s|<REFACTORINGS>|$sanitized_refactorings|g" | sed "s|<IF REFACTORINGS>||g" | sed "s|</IF>||g")
    else
        # Remove the entire <IF REFACTORINGS>...</IF> block if no refactorings
        modified_template=$(echo "$modified_template" | sed '/<IF REFACTORINGS>/,/<\/IF>/d')
    fi

    # Restore the newlines in the modified template
    modified_template=$(restore_newlines "$modified_template")

    # Output the modified template to the console
    echo "$modified_template"

    # Copy the result to clipboard
    echo "$modified_template" | clip
}